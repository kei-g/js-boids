var g=(i,t,e)=>{if(!t.has(i))throw TypeError("Cannot "+e)};var l=(i,t,e)=>(g(i,t,"read from private field"),e?e.call(i):t.get(i)),y=(i,t,e)=>{if(t.has(i))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(i):t.set(i,e)},$=(i,t,e,o)=>(g(i,t,"write to private field"),o?o.call(i,e):t.set(i,e),e);var B=(i,t,e)=>(g(i,t,"access private method"),e);var u,m,f,v,M;class a{constructor(t,e){typeof t=="number"?(this.$dirty=!0,this.$x=t,this.$y=e):(this.$dirty=t.$dirty,this.$length=t.$length,this.$x=t.x,this.$y=t.y)}add(t){this.$dirty=!0,this.$x+=t.x,this.$y+=t.y}added(t){return new a(this.$x+t.x,this.$y+t.y)}get clone(){return new a(this)}get collisionDetector(){return t=>t.doesCollide(this)}copyTo(t){t.$dirty=this.$dirty,t.$length=this.$length,t.$x=this.$x,t.$y=this.$y}crossProduct(t){return this.$x*t.y-this.$y*t.x}divide(t){this.$dirty||(this.$length/=t),this.$x/=t,this.$y/=t}dividedBy(t){const e=this.clone;return e.$dirty||(e.$length/=t),e.$x/=t,e.$y/=t,e}dotProduct(t){return this.$x*t.x+this.$y*t.y}from(t){return new a(this.$x-t.x,this.$y-t.y)}get length(){return this.$dirty&&(this.$dirty=!1,this.$length=Math.hypot(this.$x,this.$y)),this.$length}get squareOfLength(){return this.dotProduct(this)}get retrorse(){const t=this.clone;return t.$x=-t.$x,t.$y=-t.$y,t}rotate(t){const[e,o,s,r]=[Math.cos(t),Math.sin(t),this.$x,this.$y];this.$x=s*e-r*o,this.$y=s*o+r*e}rotatedBy(t){const[e,o]=[Math.cos(t),Math.sin(t)],s=this.$x*e-this.$y*o,r=this.$x*o+this.$y*e,c=this.clone;return c.$x=s,c.$y=r,c}scale(t){this.$dirty||(this.$length*=t),this.$x*=t,this.$y*=t}scaledBy(t){const e=this.clone;return this.$dirty||(e.$length*=t),e.$x*=t,e.$y*=t,e}sub(t){this.$dirty=!0,this.$x-=t.x,this.$y-=t.y}get x(){return this.$x}set x(t){this.$dirty=!0,this.$x=t}get y(){return this.$y}set y(t){this.$dirty=!0,this.$y=t}}class x extends a{constructor(){super(0,0);y(this,u,[]);this.count=0}add(e,o){e instanceof p?(super.add(this.resolve(e,o)),l(this,u).push(e),this.count++):super.add(e)}effectTo(e){this.count&&e.add(this.dividedBy(this.count))}get matched(){return l(this,u)}sub(e,o){e instanceof p?(super.sub(this.resolve(e,o)),l(this,u).push(e),this.count++):super.sub(e)}}u=new WeakMap;class w extends x{add(t,e){t instanceof p?super.sub(t,e):super.sub(t)}}class C extends w{match(t){const e=t.distance<12;return e&&this.add(t),e}resolve(t){return t.vector.dividedBy(t.distance*4)}}class V extends x{match(t){const e=t.distance;for(let o=0;o<4;o++)if(e<48+o*24)return this.add(t,o),!0}resolve(t,e){return t.vector.dividedBy(t.distance*(e+1)*8)}}class T extends x{constructor(e){super();this.spread=e}match(e){const o=e.distance<this.spread;return o&&this.add(e),o}resolve(e){const o=e.relationalBoid;return o.velocity.dividedBy(o.speed*32)}}const n=class n{constructor(t){this.backup=new a(0,0);this.degrees={suffocation:0};do{const e=20+Math.random()*(t.width-40),o=20+Math.random()*(t.height-40);this.position=new a(e,o)}while(n.circles.some(this.position.collisionDetector));this.velocity=new a(1-Math.random()*2,1-Math.random()*2)}static generate(){l(n,m)!==void 0&&clearInterval(l(n,m)),n.all.splice(0);const t=document.getElementById("boids"),e=document.getElementById("number-of-boids"),o=document.getElementById("max-number-of-boids"),s=O(parseInt(e.value),1,parseInt(o.value),100);e.value=s.toString();for(let r=0;r<s;r++){const c=Math.floor(Math.random()*2),h=[n,R][c];n.all.push(new h(t))}$(n,m,setInterval(B(n,v,M),25)),$(n,f,s)}static get numberOfBoids(){return l(n,f)}avoidCircles(){for(const t of n.circles.filter(this.position.collisionDetector))this.position.sub(this.velocity),t.intersectingPoint(this)?.rotate(this)??(this.position.from(t.center).copyTo(this.velocity),this.normalize()),this.position.add(this.velocity)}get color(){return[this.colorForRed,this.colorForGreen,this.colorForBlue].join(",")}get colorForBlue(){return 0}get colorForGreen(){return Math.min(Math.max(0,255-this.degrees.suffocation**1.125),128)}get colorForRed(){return 255}draw(t){t.beginPath(),t.fillStyle=`rgb(${this.color})`,t.arc(this.position.x,this.position.y,1,0,Math.PI*2,!0),t.fill(),t.closePath()}get isSuffocating(){return 0<this.degrees.suffocation}move(t,e){this.nextPoint.copyTo(this.position),this.avoidCircles(),this.turnOverByEdgeOfCanvas(t,e),this.updateSuffocation()}get nextPoint(){return this.position.added(this.nextVelocity)}get nextVelocity(){return this.velocity.added(this.backup).dividedBy(2)}normalize(){const t=.8+Math.random()*1.2,e=this.speed;t<e&&this.velocity.scale(t/e)}get others(){return n.all.filter(t=>t!==this)}get speed(){return this.velocity.length}turnOverByEdgeOfCanvas(t,e){this.position.x<0&&(this.position.x=0,this.velocity.x=Math.abs(this.velocity.x)),t<this.position.x&&(this.position.x=t,this.velocity.x=-Math.abs(this.velocity.x)),this.position.y<0&&(this.position.y=0,this.velocity.y=Math.abs(this.velocity.y)),e<this.position.y&&(this.position.y=e,this.velocity.y=-Math.abs(this.velocity.y))}update(){this.velocity.copyTo(this.backup);const t=new C,e=[t,new T(16+Math.random()*8),new V];for(const s of this.others){const r=new p(this,s);e.find(c=>c.match(r))}const o={suffocation:0};for(const s of t.matched)o.suffocation=.03125,s.relationalBoid.degrees.suffocation+=.03125;this.degrees.suffocation+=o.suffocation;for(const s of e)s.effectTo(this.velocity)}updateSuffocation(){this.degrees.suffocation+=[-.125,1][+n.circles.some(t=>t.doesCollide(this.position))],this.degrees.suffocation=Math.max(0,this.degrees.suffocation)}};m=new WeakMap,f=new WeakMap,v=new WeakSet,M=function(){const t=document.getElementById("boids"),e=t.getContext("2d");e.globalCompositeOperation="source-over",e.fillStyle="rgba(0, 0, 0, .1)",e.fillRect(0,0,t.width,t.height);for(const s of n.circles)s.draw(e);e.globalCompositeOperation="lighter";const o=new Set;for(const s of n.all)s.draw(e),s.update(),s.degrees.suffocation<128&&o.add(s);H(o),n.all.splice(0),n.all.push(...o);for(const s of n.all)s.normalize(),s.move(t.width,t.height)},y(n,v),y(n,m,void 0),y(n,f,void 0),n.all=[],n.circles=[];let d=n;class R extends d{constructor(t){super(t)}get colorForBlue(){return Math.min(Math.max(0,255-this.degrees.suffocation**1.125),255)}get colorForGreen(){return Math.min(Math.max(0,255-this.degrees.suffocation**1.125),128)}get colorForRed(){return Math.max(0,Math.min(this.degrees.suffocation*255/128,255))}}class p{constructor(t,e){this.relationalBoid=e;this.vector=e.position.from(t.position),this.distance=this.vector.length}}class I{constructor(t,e,o=100,s="rgba(32, 32, 48, .5)"){this.radius=o;this.color=s;this.center=new a(t,e)}amplitude(t,e){const o=e.position.added(e.velocity.scaledBy(t)),[s,r]=[e.nextPoint,this.center].map(c=>c.from(o));return Math.acos(s.dotProduct(r)/(s.length*r.length))}draw(t){t.beginPath(),t.fillStyle=this.color,t.arc(this.center.x,this.center.y,this.radius,0,Math.PI*2,!0),t.fill(),t.closePath()}doesCollide(t){return this.center.from(t).length<=this.radius}intersectingPoint(t){const e=t.position.from(this.center),o=t.velocity.squareOfLength,s=-t.velocity.dotProduct(e),r=e.squareOfLength-this.squareOfRadius,c=s*s-o*r;if(0<=c){const h=Math.sqrt(c),b=[(s+h)/o,(s-h)/o];if(b.some(z(0,1)))return new E(this.amplitude(b[0],t))}}get squareOfRadius(){return this.radius*this.radius}}class E{constructor(t){this.rotation=Math.PI-(t*2<=Math.PI?2:1)*t}rotate(t){return t.velocity.rotate(this.rotation),!0}}const P=i=>{const t=i.target,e=t.getBoundingClientRect(),o=new a(i.x,i.y).from(new a(e.left,e.top)),{x:s}=o.scaledBy(t.width/e.width),{y:r}=o.scaledBy(t.height/e.height),c=new a(s,r),h=d.circles.filter(c.collisionDetector);for(const b of h){const D=d.circles.indexOf(b);d.circles.splice(D,1)}h.length==0&&d.circles.push(new I(c.x,c.y))},L=i=>[...i].some(t=>t.isSuffocating),O=(i,t,e,o)=>isNaN(i)?o:Math.max(t,Math.min(i,e)),S=()=>{const i=document.getElementById("boids");i.addEventListener("mouseup",P);const t=()=>(i.height=i.clientHeight,i.width=i.clientWidth,void 0);t(),window.addEventListener("resize",t),d.generate(),document.getElementById("reset-button").addEventListener("click",d.generate)},F=i=>t=>{const e={count:0,sum:0};for(const o of i)e.sum+=t(o);return e},H=i=>{const t=document.getElementById("number-of-living-boids"),e=document.getElementById("health-of-living-boids");if(i.size){const{numberOfBoids:o}=d,s=Math.floor(i.size*3/o),r=["bad","not-good","good","perfect"][s],{sum:c}=F(i)(h=>128-h.degrees.suffocation);t.setAttribute("face",[r,"warn"][+(1<s&&L(i))]),t.setAttribute("status",r),t.textContent=i.size.toString(),e.textContent="\u{1F31F}"+Math.floor(c*9999/(o*128))}else t.removeAttribute("face"),t.removeAttribute("status"),t.textContent="",e.textContent=""},z=(i,t)=>e=>i<=e&&e<=t;window.addEventListener("DOMContentLoaded",S);
