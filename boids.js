"use strict";class r{constructor(t,e){var i;typeof t=="number"?(this.x=t,this.y=e):(this.x=t.x,this.y=(i=t==null?void 0:t.y)!=null?i:e)}add(t){this.x+=t.x,this.y+=t.y}added(t){return new r(this.x+t.x,this.y+t.y)}get collisionDetector(){return t=>t.doesCollide(this)}copyTo(t){t.x=this.x,t.y=this.y}crossProduct(t){return this.x*t.y-this.y*t.x}divide(t){this.x/=t,this.y/=t}dividedBy(t){return new r(this.x/t,this.y/t)}dotProduct(t){return this.x*t.x+this.y*t.y}from(t){return new r(this.x-t.x,this.y-t.y)}get length(){return Math.hypot(this.x,this.y)}get squareOfLength(){return this.dotProduct(this)}get retrorse(){return new r(-this.x,-this.y)}rotate(t){const[e,i,o,s]=[Math.cos(t),Math.sin(t),this.x,this.y];this.x=o*e-s*i,this.y=o*i+s*e}rotatedBy(t){const[e,i]=[Math.cos(t),Math.sin(t)];return new r(this.x*e-this.y*i,this.x*i+this.y*e)}scale(t){this.x*=t,this.y*=t}scaledBy(t){return new r(this.x*t,this.y*t)}sub(t){this.x-=t.x,this.y-=t.y}}class h extends r{constructor(){super(0,0);this.count=0}add(e){super.add(e),this.count++}effectTo(e){this.count&&e.add(this.dividedBy(this.count))}}class u extends h{add(t){super.sub(t),this.count++}}class y extends u{match(t){const e=t.distance<12;return e&&this.add(t.vector.dividedBy(t.distance*4)),e}}class v extends h{match(t){const e=t.distance;for(let i=0;i<4;i++)if(e<48+i*24)return this.add(t.vector.dividedBy(e*(i+1)*8)),!0}}class m extends h{constructor(e){super();this.spread=e}match(e){const i=e.distance<this.spread;if(i){const o=e.relationalBoid;this.add(o.velocity.dividedBy(o.speed*32))}return i}}class p{constructor(t,e,i,o,s){this.all=t;this.canvas=e;this.circles=i;this.context=o;this.index=s;do{const c=20+Math.random()*(e.width-40),a=20+Math.random()*(e.height-40);this.position=new r(c,a)}while(i.some(this.position.collisionDetector));this.velocity=new r(1-Math.random()*2,1-Math.random()*2)}avoidCircles(){var t;for(const e of this.circles.filter(this.position.collisionDetector)){this.position.sub(this.velocity);const i=e.intersectingPoint(this);(t=i==null?void 0:i.rotate(this))!=null||(this.position.from(e.center).copyTo(this.velocity),this.normalize()),this.position.add(this.velocity)}}draw(){this.context.beginPath(),this.context.fillStyle="rgb(255, 128, 0)",this.context.arc(this.position.x,this.position.y,1,0,Math.PI*2,!0),this.context.fill()}drawCanvas(){this.context.fillStyle="rgba(0, 0, 0, .1)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height)}drawCircles(){this.circles.forEach(t=>t.draw())}set globalCompositeOperation(t){this.context.globalCompositeOperation=t}move(){this.position.add(this.velocity),this.avoidCircles(),this.turnOverByEdgeOfCanvas()}get nextPoint(){return this.position.added(this.velocity)}normalize(){const t=.8+Math.random()*1.2,e=this.speed;t<e&&this.velocity.scale(t/e)}get others(){return this.all.filter((t,e)=>e!=this.index)}get speed(){return this.velocity.length}turnOverByEdgeOfCanvas(){this.position.x<0&&(this.position.x=0,this.velocity.x=Math.abs(this.velocity.x)),this.canvas.width<this.position.x&&(this.position.x=this.canvas.width,this.velocity.x=-Math.abs(this.velocity.x)),this.position.y<0&&(this.position.y=0,this.velocity.y=Math.abs(this.velocity.y)),this.canvas.height<this.position.y&&(this.position.y=this.canvas.height,this.velocity.y=-Math.abs(this.velocity.y))}update(){const t=[new y,new m(16+Math.random()*8),new v];for(const e of this.others){const i=new f(this,e);t.find(o=>o.match(i))}for(const e of t)e.effectTo(this.velocity)}}class f{constructor(t,e){this.baseBoid=t;this.relationalBoid=e;this.vector=e.position.from(t.position),this.distance=this.vector.length}}function b(n,t){return e=>n<=e&&e<=t}class l{constructor(t,e,i,o=100,s="rgba(32, 32, 48, .5)"){this.context=t;this.radius=o;this.color=s;this.center=new r(e,i)}amplitude(t,e){const i=e.position.added(e.velocity.scaledBy(t)),[o,s]=[e.nextPoint,this.center].map(c=>c.from(i));return Math.acos(o.dotProduct(s)/(o.length*s.length))}draw(){this.context.beginPath(),this.context.fillStyle=this.color,this.context.arc(this.center.x,this.center.y,this.radius,0,Math.PI*2,!0),this.context.fill()}doesCollide(t){return this.center.from(t).length<=this.radius}intersectingPoint(t){const e=t.position.from(this.center),i=t.velocity.squareOfLength,o=-t.velocity.dotProduct(e),s=e.squareOfLength-this.squareOfRadius,c=o*o-i*s;if(0<=c){const a=Math.sqrt(c),d=[(o+a)/i,(o-a)/i];if(d.some(b(0,1)))return new x(this.amplitude(d[0],t))}}get squareOfRadius(){return this.radius*this.radius}}class x{constructor(t){this.rotation=Math.PI-(t*2<=Math.PI?2:1)*t}rotate(t){return t.velocity.rotate(this.rotation),!0}}function g(n,t,e){const i=e.target.getBoundingClientRect(),o=new r(e.clientX,e.clientY).from(new r(i.left,i.top)),s=n.filter(o.collisionDetector);for(const c of s){const a=n.indexOf(c);n.splice(a,1)}s.length==0&&n.push(new l(t,o.x,o.y))}function w(n){const t=n[0];t.globalCompositeOperation="source-over",t.drawCanvas(),t.drawCircles(),t.globalCompositeOperation="lighter";for(const e of n)e.draw(),e.update();for(const e of n)e.normalize(),e.move()}export function generateBoids(n){const t=document.getElementById(n.id),e=t.getContext("2d"),i=[];for(let s=0;s<1;s++){const c=100+Math.random()*(t.width-200),a=100+Math.random()*(t.height-200);i.push(new l(e,c,a))}const o=[];for(let s=0;s<n.num;s++)o.push(new p(o,t,i,e,s));return t.onmouseup=s=>g(i,e,s),{boids:o,update:w}}
