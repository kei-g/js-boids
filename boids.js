class a{constructor(t,e){typeof t=="number"?(this.x=t,this.y=e):(this.x=t.x,this.y=t?.y??e)}add(t){this.x+=t.x,this.y+=t.y}added(t){return new a(this.x+t.x,this.y+t.y)}get collisionDetector(){return t=>t.doesCollide(this)}copyTo(t){t.x=this.x,t.y=this.y}crossProduct(t){return this.x*t.y-this.y*t.x}divide(t){this.x/=t,this.y/=t}dividedBy(t){return new a(this.x/t,this.y/t)}dotProduct(t){return this.x*t.x+this.y*t.y}from(t){return new a(this.x-t.x,this.y-t.y)}get length(){return Math.hypot(this.x,this.y)}get squareOfLength(){return this.dotProduct(this)}get retrorse(){return new a(-this.x,-this.y)}rotate(t){const[e,i,s,n]=[Math.cos(t),Math.sin(t),this.x,this.y];this.x=s*e-n*i,this.y=s*i+n*e}rotatedBy(t){const[e,i]=[Math.cos(t),Math.sin(t)];return new a(this.x*e-this.y*i,this.x*i+this.y*e)}scale(t){this.x*=t,this.y*=t}scaledBy(t){return new a(this.x*t,this.y*t)}sub(t){this.x-=t.x,this.y-=t.y}}class u extends a{constructor(){super(0,0);this.count=0}add(e){super.add(e),this.count++}effectTo(e){this.count&&e.add(this.dividedBy(this.count))}}class p extends u{add(t){super.sub(t),this.count++}}class x extends p{match(t){const e=t.distance<12;return e&&this.add(t.vector.dividedBy(t.distance*4)),e}}class b extends u{match(t){const e=t.distance;for(let i=0;i<4;i++)if(e<48+i*24)return this.add(t.vector.dividedBy(e*(i+1)*8)),!0}}class g extends u{constructor(e){super();this.spread=e}match(e){const i=e.distance<this.spread;if(i){const s=e.relationalBoid;this.add(s.velocity.dividedBy(s.speed*32))}return i}}const h=class h{constructor(t,e){this.canvas=t;this.context=e;this.backup=new a(0,0);this.degrees={suffocation:0};do{const i=20+Math.random()*(t.width-40),s=20+Math.random()*(t.height-40);this.position=new a(i,s)}while(h.circles.some(this.position.collisionDetector));this.velocity=new a(1-Math.random()*2,1-Math.random()*2)}avoidCircles(){for(const t of h.circles.filter(this.position.collisionDetector))this.position.sub(this.velocity),t.intersectingPoint(this)?.rotate(this)??(this.position.from(t.center).copyTo(this.velocity),this.normalize()),this.position.add(this.velocity)}draw(){this.context.beginPath(),this.context.fillStyle=`rgb(255, ${Math.max(128-this.degrees.suffocation,0)}, 0)`,this.context.arc(this.position.x,this.position.y,1,0,Math.PI*2,!0),this.context.fill(),this.context.closePath()}get isSuffocating(){return 0<this.degrees.suffocation}move(){this.nextPoint.copyTo(this.position),this.avoidCircles(),this.turnOverByEdgeOfCanvas(),this.updateSuffocation()}get nextPoint(){return this.position.added(this.nextVelocity)}get nextVelocity(){return this.velocity.added(this.backup).dividedBy(2)}normalize(){const t=.8+Math.random()*1.2,e=this.speed;t<e&&this.velocity.scale(t/e)}get others(){return h.all.filter(t=>t!==this)}get speed(){return this.velocity.length}turnOverByEdgeOfCanvas(){this.position.x<0&&(this.position.x=0,this.velocity.x=Math.abs(this.velocity.x)),this.canvas.width<this.position.x&&(this.position.x=this.canvas.width,this.velocity.x=-Math.abs(this.velocity.x)),this.position.y<0&&(this.position.y=0,this.velocity.y=Math.abs(this.velocity.y)),this.canvas.height<this.position.y&&(this.position.y=this.canvas.height,this.velocity.y=-Math.abs(this.velocity.y))}update(){this.velocity.copyTo(this.backup);const t=[new x,new g(16+Math.random()*8),new b];for(const e of this.others){const i=new C(this,e);t.find(s=>s.match(i))}for(const e of t)e.effectTo(this.velocity)}updateSuffocation(){this.degrees.suffocation+=[-.125,1][+h.circles.some(t=>t.doesCollide(this.position))],this.degrees.suffocation=Math.max(0,this.degrees.suffocation)}};h.all=[],h.circles=[];let c=h;class C{constructor(t,e){this.relationalBoid=e;this.vector=e.position.from(t.position),this.distance=this.vector.length}}class y{constructor(t,e,i,s=100,n="rgba(32, 32, 48, .5)"){this.context=t;this.radius=s;this.color=n;this.center=new a(e,i)}amplitude(t,e){const i=e.position.added(e.velocity.scaledBy(t)),[s,n]=[e.nextPoint,this.center].map(d=>d.from(i));return Math.acos(s.dotProduct(n)/(s.length*n.length))}draw(){this.context.beginPath(),this.context.fillStyle=this.color,this.context.arc(this.center.x,this.center.y,this.radius,0,Math.PI*2,!0),this.context.fill()}doesCollide(t){return this.center.from(t).length<=this.radius}intersectingPoint(t){const e=t.position.from(this.center),i=t.velocity.squareOfLength,s=-t.velocity.dotProduct(e),n=e.squareOfLength-this.squareOfRadius,d=s*s-i*n;if(0<=d){const r=Math.sqrt(d),l=[(s+r)/i,(s-r)/i];if(l.some(I(0,1)))return new w(this.amplitude(l[0],t))}}get squareOfRadius(){return this.radius*this.radius}}class w{constructor(t){this.rotation=Math.PI-(t*2<=Math.PI?2:1)*t}rotate(t){return t.velocity.rotate(this.rotation),!0}}const M=(o,t)=>{const e=t.target,i=e.getBoundingClientRect(),s=new a(t.x,t.y).from(new a(i.left,i.top)),{x:n}=s.scaledBy(e.width/i.width),{y:d}=s.scaledBy(e.height/i.height),r=new a(n,d),l=c.circles.filter(r.collisionDetector);for(const v of l){const f=c.circles.indexOf(v);c.circles.splice(f,1)}l.length==0&&c.circles.push(new y(o,r.x,r.y))},B=o=>[...o].some(t=>t.isSuffocating),D=()=>{const o=document.getElementById("boids");o.onmouseup=n=>M(t,n);const t=o.getContext("2d");c.circles.push(...L(o,t));const e=()=>V(o,t);m(o,t);const i={intervalId:setInterval(e,25)};document.getElementById("reset-button").addEventListener("click",n=>{clearInterval(i.intervalId),m(o,t),i.intervalId=setInterval(e,25)})},m=(o,t)=>{const{value:e}=document.getElementById("number-of-boids");c.all.splice(0);for(let i=0;i<parseInt(e);i++)c.all.push(new c(o,t))},L=(o,t)=>{const e=[];for(let i=0;i<1;i++){const s=100+Math.random()*(o.width-200),n=100+Math.random()*(o.height-200);e.push(new y(t,s,n))}return e},V=(o,t)=>{t.globalCompositeOperation="source-over",t.fillStyle="rgba(0, 0, 0, .1)",t.fillRect(0,0,o.width,o.height),c.circles.forEach(r=>r.draw()),t.globalCompositeOperation="lighter";const e=new Set;for(const r of c.all)r.draw(),r.update(),r.degrees.suffocation<128&&e.add(r);const i=document.getElementById("number-of-living-boids");i.textContent=e.size.toString();const s=parseInt(document.getElementById("number-of-boids").value),n=Math.floor(e.size*3/s),d=["bad","not-good","good","perfect"][n];i.setAttribute("face",[d,"warn"][+(1<n&&B(e))]),i.setAttribute("status",d),c.all.splice(0),c.all.push(...e);for(const r of c.all)r.normalize(),r.move()},I=(o,t)=>e=>o<=e&&e<=t;window.addEventListener("DOMContentLoaded",D);
