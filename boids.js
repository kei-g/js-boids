var v=(i,t,e)=>{if(!t.has(i))throw TypeError("Cannot "+e)};var g=(i,t,e)=>(v(i,t,"read from private field"),e?e.call(i):t.get(i)),p=(i,t,e)=>{if(t.has(i))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(i):t.set(i,e)},b=(i,t,e,o)=>(v(i,t,"write to private field"),o?o.call(i,e):t.set(i,e),e);var u;class a{constructor(t,e){typeof t=="number"?(this.x=t,this.y=e):(this.x=t.x,this.y=t?.y??e)}add(t){this.x+=t.x,this.y+=t.y}added(t){return new a(this.x+t.x,this.y+t.y)}get collisionDetector(){return t=>t.doesCollide(this)}copyTo(t){t.x=this.x,t.y=this.y}crossProduct(t){return this.x*t.y-this.y*t.x}divide(t){this.x/=t,this.y/=t}dividedBy(t){return new a(this.x/t,this.y/t)}dotProduct(t){return this.x*t.x+this.y*t.y}from(t){return new a(this.x-t.x,this.y-t.y)}get length(){return Math.hypot(this.x,this.y)}get squareOfLength(){return this.dotProduct(this)}get retrorse(){return new a(-this.x,-this.y)}rotate(t){const[e,o,s,r]=[Math.cos(t),Math.sin(t),this.x,this.y];this.x=s*e-r*o,this.y=s*o+r*e}rotatedBy(t){const[e,o]=[Math.cos(t),Math.sin(t)];return new a(this.x*e-this.y*o,this.x*o+this.y*e)}scale(t){this.x*=t,this.y*=t}scaledBy(t){return new a(this.x*t,this.y*t)}sub(t){this.x-=t.x,this.y-=t.y}}class f extends a{constructor(){super(0,0);this.count=0}add(e){super.add(e),this.count++}effectTo(e){this.count&&e.add(this.dividedBy(this.count))}}class B extends f{add(t){super.sub(t),this.count++}}class M extends B{match(t){const e=t.distance<12;return e&&this.add(t.vector.dividedBy(t.distance*4)),e}}class C extends f{match(t){const e=t.distance;for(let o=0;o<4;o++)if(e<48+o*24)return this.add(t.vector.dividedBy(e*(o+1)*8)),!0}}class w extends f{constructor(e){super();this.spread=e}match(e){const o=e.distance<this.spread;if(o){const s=e.relationalBoid;this.add(s.velocity.dividedBy(s.speed*32))}return o}}const l=class l{constructor(t){p(this,u,void 0);this.backup=new a(0,0);this.degrees={suffocation:0};b(this,u,new WeakRef(t)),this.canvas=t.canvas,this.context=t.context;do{const e=20+Math.random()*(t.canvas.width-40),o=20+Math.random()*(t.canvas.height-40);this.position=new a(e,o)}while(l.circles.some(this.position.collisionDetector));this.velocity=new a(1-Math.random()*2,1-Math.random()*2)}avoidCircles(){for(const t of l.circles.filter(this.position.collisionDetector))this.position.sub(this.velocity),t.intersectingPoint(this)?.rotate(this)??(this.position.from(t.center).copyTo(this.velocity),this.normalize()),this.position.add(this.velocity)}get color(){return[this.colorForRed,this.colorForGreen,this.colorForBlue].join(",")}get colorForBlue(){return 0}get colorForGreen(){return Math.min(Math.max(0,255-this.degrees.suffocation**1.125),128)}get colorForRed(){return 255}draw(){this.context.beginPath(),this.context.fillStyle=`rgb(${this.color})`,this.context.arc(this.position.x,this.position.y,1,0,Math.PI*2,!0),this.context.fill(),this.context.closePath()}get isSuffocating(){return 0<this.degrees.suffocation}move(){this.nextPoint.copyTo(this.position),this.avoidCircles(),this.turnOverByEdgeOfCanvas(),this.updateSuffocation()}get nextPoint(){return this.position.added(this.nextVelocity)}get nextVelocity(){return this.velocity.added(this.backup).dividedBy(2)}normalize(){const t=.8+Math.random()*1.2,e=this.speed;t<e&&this.velocity.scale(t/e)}get others(){return l.all.filter(t=>t!==this)}get session(){return g(this,u).deref()}get speed(){return this.velocity.length}turnOverByEdgeOfCanvas(){this.position.x<0&&(this.position.x=0,this.velocity.x=Math.abs(this.velocity.x)),this.canvas.width<this.position.x&&(this.position.x=this.canvas.width,this.velocity.x=-Math.abs(this.velocity.x)),this.position.y<0&&(this.position.y=0,this.velocity.y=Math.abs(this.velocity.y)),this.canvas.height<this.position.y&&(this.position.y=this.canvas.height,this.velocity.y=-Math.abs(this.velocity.y))}update(){this.velocity.copyTo(this.backup);const t=[new M,new w(16+Math.random()*8),new C];for(const e of this.others){const o=new L(this,e);t.find(s=>s.match(o))}for(const e of t)e.effectTo(this.velocity)}updateSuffocation(){this.degrees.suffocation+=[-.125,1][+l.circles.some(t=>t.doesCollide(this.position))],this.degrees.suffocation=Math.max(0,this.degrees.suffocation)}};u=new WeakMap,l.all=[],l.circles=[];let c=l;class D extends c{constructor(t){super(t)}get colorForBlue(){return Math.min(Math.max(0,255-this.degrees.suffocation**1.125),255)}get colorForGreen(){return Math.min(Math.max(0,255-this.degrees.suffocation**1.125),128)}get colorForRed(){return Math.max(0,Math.min(this.degrees.suffocation*255/128,255))}}class L{constructor(t,e){this.relationalBoid=e;this.vector=e.position.from(t.position),this.distance=this.vector.length}}class S{constructor(t,e,o,s=100,r="rgba(32, 32, 48, .5)"){this.context=t;this.radius=s;this.color=r;this.center=new a(e,o)}amplitude(t,e){const o=e.position.added(e.velocity.scaledBy(t)),[s,r]=[e.nextPoint,this.center].map(n=>n.from(o));return Math.acos(s.dotProduct(r)/(s.length*r.length))}draw(){this.context.beginPath(),this.context.fillStyle=this.color,this.context.arc(this.center.x,this.center.y,this.radius,0,Math.PI*2,!0),this.context.fill()}doesCollide(t){return this.center.from(t).length<=this.radius}intersectingPoint(t){const e=t.position.from(this.center),o=t.velocity.squareOfLength,s=-t.velocity.dotProduct(e),r=e.squareOfLength-this.squareOfRadius,n=s*s-o*r;if(0<=n){const d=Math.sqrt(n),h=[(s+d)/o,(s-d)/o];if(h.some(O(0,1)))return new V(this.amplitude(h[0],t))}}get squareOfRadius(){return this.radius*this.radius}}class V{constructor(t){this.rotation=Math.PI-(t*2<=Math.PI?2:1)*t}rotate(t){return t.velocity.rotate(this.rotation),!0}}const E=(i,t)=>{const e=t.target,o=e.getBoundingClientRect(),s=new a(t.x,t.y).from(new a(o.left,o.top)),{x:r}=s.scaledBy(e.width/o.width),{y:n}=s.scaledBy(e.height/o.height),d=new a(r,n),h=c.circles.filter(d.collisionDetector);for(const m of h){const y=c.circles.indexOf(m);c.circles.splice(y,1)}h.length==0&&c.circles.push(new S(i,d.x,d.y))},I=i=>[...i].some(t=>t.isSuffocating),x=()=>{c.all.splice(0);const i=document.getElementById("boids"),t=i.getContext("2d"),e=()=>T(i,t),{value:o}=document.getElementById("number-of-boids"),s=parseInt(o),r={canvas:i,context:t,numberOfBoids:s};for(let n=0;n<s;n++){const d=Math.floor(Math.random()*2),h=[c,D][d];c.all.push(new h(r))}return r.intervalId=setInterval(e,25),r.regenerate=n=>(clearInterval(n.intervalId),x()),r},k=()=>{const i=()=>(t.height=t.clientHeight,t.width=t.clientWidth,void 0),t=document.getElementById("boids");window.addEventListener("resize",i),i(),t.onmouseup=n=>E(e,n);const e=t.getContext("2d"),o={session:x()},s=()=>(o.session=o.session.regenerate(o.session),void 0);document.getElementById("reset-button").addEventListener("click",s)},R=()=>{for(const i of c.all){const{session:t}=i;if(t)return t}},P=i=>t=>{const e={count:0,sum:0};for(const o of i)e.sum+=t(o);return e},T=(i,t)=>{t.globalCompositeOperation="source-over",t.fillStyle="rgba(0, 0, 0, .1)",t.fillRect(0,0,i.width,i.height),c.circles.forEach(n=>n.draw()),t.globalCompositeOperation="lighter";const e=new Set;for(const n of c.all)n.draw(),n.update(),n.degrees.suffocation<128&&e.add(n);const o=document.getElementById("number-of-living-boids"),s=document.getElementById("health-of-living-boids"),r=R();if(r){const n=r.numberOfBoids,d=Math.floor(e.size*3/n),h=["bad","not-good","good","perfect"][d];o.setAttribute("face",[h,"warn"][+(1<d&&I(e))]),o.setAttribute("status",h),o.textContent=e.size.toString();const{sum:m}=P(e)(y=>128-y.degrees.suffocation);s.textContent="\u{1F31F}"+Math.floor(m*9999/(n*128))}else o.removeAttribute("face"),o.removeAttribute("status"),o.textContent="",s.textContent="";c.all.splice(0),c.all.push(...e);for(const n of c.all)n.normalize(),n.move()},O=(i,t)=>e=>i<=e&&e<=t;window.addEventListener("DOMContentLoaded",k);
